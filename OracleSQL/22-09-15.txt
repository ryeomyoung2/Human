프로시저

create or replace procedure 프로시저명(
 매개변수1 in/out/in out 데이터타입 [:=기본값]    => default가 in임(아무것도 입력안했을때)
,매개변수n in/out/in out 데이터타입 [:=기본값] )        => default가 in임(아무것도 입력안했을때)
is 
 변수/상수 선언부
begin
 실행문
 [return;]
end;

1.SQL Devleoper/SQL Plus 안에서 execute 프로시저명 <-실행

fucntion/procedure 이름(a number, b varchar2:= ", c number:=0)
이름(10,'x',4)
이름(10) == 이름(10,'',0)
이름(10,'x')==이름(10,'x',0)
이름(10, ,4) 불가






create or replace procedure getSum(did departments.department_id%type :=50)
is 
  strDname departments.department_name%type :='';
  total_sal number:=0;
  howmany number:=0;
begin
  select department_name into strDname
  from departments where department_id=did;
  select sum(salary),count(*)into total_sal, howmany
  from employees
  where department_id=did
  group by department_id;
  dbms_output.put_line('부서명['||strDname||'],총급여['||total_sal||'],총인원수['||howmany||']');
  end;
  /

 exec getSum();

  declare
  begin
  getSum(90);
  end;
   => 프로시저를 코드블럭 내에서 호출할때는 execute문을 사용할 수 없다.


select * from user_source where type='PROCEDURE';


 declare
  begin
   getSum(90);
  end;
이렇게도 실행가능


declare
    strName employees.emp_name%type;
    strDname departments.department_name%type;
  begin
   getSum(90);
   select emp_name,getDname(department_id)
   into strName, strDname
   from employees
   where department_id=90 and rownum=1;
   dbms_output.put_line(strName||'-'||strDname);
  end;
codeblock에서 프로시저 실행하는 방법



---------------------------------------------------------------------------------------------------------
create or replace procedure getDepname(
did in out number, dname out varchar2)
is 
begin 
     select department_name into dname
    from departments
    where department_id=did;
    did:=100;
end;
/


declare
   department_name departments.department_name%type;
   dep_id number :=80;
begin
   getDepname(dep_id, department_name);
   dbms_output.put_line('부서명='||department_name||'['||dep_id||']');
   end;
   /
---------------------------------------------------------------------------------------------------------


예외처리 트랜잭션


Transaction 시작(암묵적)
-SQLPlus/SQL Developer가 실행
-Commit/Rollback 실행 후

Transaction 종료(암묵적)
-SQLPlus/SQL Developer종료 (commit)
-SQLPlus/SQL Developer비정상 종료(Rollback)
=>정전, 윈도우비정상종료

Transaction에 포함되지 않는 SQL문
=> DDL문(Create/Drop/Alter/Truncate/Grant/Revoke)



update 
insert
savepoint a1;
create table <-즉시 실행(Transaction에 포함되지않아 테이블이 사라지지 않는다,텅빈테이블만 남음)
insert
update
delete
savepoint a2;
drop table <-즉시 실행(Transaction에 미포함)
rollback to a2;



savepoint 레이블;
rollback [to 레이블];
commit;

---------------------------------------------------------------------------------------------------------
Exception

declare
begin
   실행문;
   exception when 예외종류 then
      실행문;
   when 예외종류2 then
      실행문;
   when 예외종류n then
      실행문;
end;



declare
 vi_num number:=0;
 begin
  vi_num :=10/0;
  dbms_output.put_line('success');
  
  exception when others then
    dbms_output.put_line('오류발생 -Divided by zero');
    
    
    end;
    /

=> PL/SQL 프로시저가 성공적으로 완료되었습니다.
오류발생 -Divided by zero





declare
 vi_num number:=0;
 begin
  vi_num :=10/0;
  dbms_output.put_line('success');
  
  exception when others then
    dbms_output.put_line('오류발생');
     dbms_output.put_line('sql error code['||sqlcode||']');
         dbms_output.put_line('error message['||sqlerrm||']');
    end;
    /

==> 에러코드랑 에러메세지 추가로 출력 
오류발생 -Divided by zero

오류발생
sql error code[-1476]
error message[ORA-01476: 제수가 0 입니다]




declare
 vi_num number:=0;
 begin
  vi_num :=10/'10';
  dbms_output.put_line('success['||vi_num||']');
  
  exception when others then
    dbms_output.put_line('오류발생');
     dbms_output.put_line('sql error code['||sqlcode||']');
         dbms_output.put_line('error message['||sqlerrm||']');
    end;
    /
==> success

success[1]



사용자정의 익셉션 만들기(user-defined exception

declare
   myExcept exception     
begin
  ...
  if ~ then
    raise myExcept;
  end if;
  ...
  Exception when....then
       실행문;
  when myExcept then
       실행문;
end;
---------------------------------------------------------------------------------------------------------
cursor : SQL실행결과가 저장된 메모리의 특별한 지역
              (select)

묵시적(implicit) 커서 : 자동으로 생성되는 커서
   SQL%FOUND : select 결과로 1개 이상이 조회되면 true, 없으면 false
   SQL%NOTFOUND : select 결과로 없으면 true, 1개 이상이 조회되면 false
   SQL%ROWCOUNT : select 결과의 레코드(row) 갯수 
   SQL%ISOPEN : 


명시적(explicit) 커서 : PL/SQL 코드에 의해 의도적으로 만든 커서




  1. 커서 선언
  2. 커서 열기
  3. 커서에 저장된 데이터 사용
  4. 커서 닫기





declare
 vs_name employees.emp_name%type;
begin
 select emp_name into vs_name from employees
 where manager_id is null;
 if sql%found then
    dbms_output.put_line(vs_name);
   else 
      dbms_output.put_line('찾지 못했습니다.');
      end if;
 end;
 /
=> Steven King


declare
 vs_name employees.emp_name%type;
begin
 select emp_name into vs_name from employees
 where manager_id =10000;
     dbms_output.put_line(vs_name);
     
     exception when others then
        if sql%notfound then
   
      dbms_output.put_line('찾지 못했습니다.');
      end if;
 end;
 /
  
==>찾지 못했습니다.




declare
 vs_name employees.emp_name%type;
begin
 select emp_name into vs_name from employees
 where manager_id is null;
     dbms_output.put_line(vs_name||',인원수['||sql%rowcount||']');
     
     exception when others then
        if sql%notfound then
   
      dbms_output.put_line('찾지 못했습니다.');
      end if;
 end;
 /
 ==> Steven King,인원수[1]




declare
 vs_name employees.emp_name%type;
 cursor c1 (a number, b number)  --1.커서 선언
 is 
   select emp_name from employees where salary between a and b;
begin
 open c1(0,3000);--2.커서 열기
 loop
  fetch c1 into vs_name;  --3. 데이터 사용하기(fetch)
  exit when c1%notfound;
  dbms_output.put_line(vs_name);
 end loop; 
 close c1; --4.커서 닫기
 end;
 /

=>Donald OConnell
Douglas Grant
Shelli Baida
Sigal Tobias
Guy Himuro
Karen Colmenares
Irene Mikkilineni
James Landry
Steven Markle
Mozhe Atkinson
James Marlow
TJ Olson
Michael Rogers
Ki Gee
Hazel Philtanker
John Seo
Joshua Patel
Randall Matos
Peter Vargas
Martha Sullivan
Girard Geoni
Anthony Cabrio
Timothy Gates
Randall Perkins
Vance Jones
Kevin Feeney

select emp_name from employees where salary between 0 and 3000;



***************중요 처음부터 혼자 다시 해볼것***************


/* 부서명, 부서별 인원수, 부서직원의 월급합계 */
select b.department_name, sum(a.salary), count(*)
   from employees a, departments b
   where a.department_id=b.department_id
   group by b.department_name


이거는 그냥 조인 이용해서 sql문으로 찍을수있게 만든 것이고

이것을  커서로 출력하려면


declare
  vs_dname departments.department_name%type;
  total employees.salary%type;
  howmany number;
  cursor c1 is
        select b.department_name, sum(a.salary),count(*)
         from employees a, departments b
        where a.department_id=b.department_id
        group by b.department_name;
begin
  open c1;
  loop
    fetch c1 into vs_dname, total, howmany;
    exit when c1%notfound;
    dbms_output.put_line(vs_dname||','||total||','||howmany);
  end loop;
  close c1;
end;



---------------------------------------------------------------------------------------------------------
--/*employees sales  직원별 매출총액*/

 select a.emp_name, sum(b.amount_sold)
         from employees a, sales b
        where a.employee_id=b.employee_id
        group by a.emp_name;


이걸 커서문으로 출력하면


declare
  vs_name employees.emp_name%type;
  total_sold sales.amount_sold%type;
  cursor c1 is
        select a.emp_name, sum(b.amount_sold)
         from employees a, sales b
        where a.employee_id=b.employee_id
        group by a.emp_name;
        order by sum(b.amount_sold);
begin
  open c1;
  loop
    fetch c1 into vs_name, total_sold;
    exit when c1%notfound;
    dbms_output.put_line(vs_name||','||total_sold);
  end loop;
  close c1;
end;
이렇게하면됨


sql문 부분을 커서를 통해 테이블로 만들수 있다.



-------------------------------------------------------------------------------------------------------
커서+for문 (위보다 간단해진다) ver2



for 변수 in 커서명(매개변수1,...,매개변수n)
loop
   실행문;
end loop;



declare
    cursor c1(x number) is
    select emp_name,department_id
    from employees 
    where manager_id=x;
 begin
   for rec in c1(100)
   loop
     dbms_output.put_line(rec.emp_name||','||rec.department_id);
   end loop;
end;
매니저 아이디가 100인 사람


declare
    cursor c1 is
     select a.emp_name, sum(b.amount_sold) total
         from employees a, sales b
        where a.employee_id=b.employee_id
        group by a.emp_name
        order by sum(b.amount_sold);
 begin
   for rec in c1
   loop
     dbms_output.put_line(rec.emp_name||','||rec.total);
   end loop;
end;
위에서 했던  직원별 매출총액을 ver2 for문을 이용한 커서로 했을경우


-------------------------------------------------------------------------------------------------------
ver3


declare
begin
 for rec in (select emp_name,department_id
               from employees
               where manager_id=100)
 loop
  dbms_output.put_line(rec.emp_name||','||rec.department_id);
end loop;
end;



declare
 begin
   for rec in ( select a.emp_name, sum(b.amount_sold) total
         from employees a, sales b
        where a.employee_id=b.employee_id
        group by a.emp_name
        order by sum(b.amount_sold)
   ) 
   loop
     dbms_output.put_line(rec.emp_name||','||rec.total);
   end loop;
end;
위에서 했던  직원별 매출총액을 ver3 for문을 이용한 커서로 했을경우


-------------------------------------------------------------------------------------------------------

패키지  

패키지의 프로시저를 불러오려면 execute 패키지명.프로시저명; 이런식으로 하거나
select 패키지명.함수명 from... 함수불러오려면 이렇게 하면됨


..._pkg 패키지명
fn_함수명
proc_프로시저명


